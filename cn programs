1)
set ns [new Simulator]
set nf [open prog1.nam w]
$ns namtrace-all $nf
set tf [open prog1.tr w]
$ns trace-all $tf
proc finish { } {
global ns nf tf
$ns flush-trace
close $nf
close $tf
exec nam prog1.nam &
exit 0
}
set n0 [$ns node]
set n2 [$ns node]
set n3 [$ns node]

$ns duplex-link $n0 $n2 200Mb 10ms DropTail
$ns duplex-link $n2 $n3 1Mb 1000ms DropTail
$ns queue-limit $n0 $n2 10
set udp0 [new Agent/UDP]
$ns attach-agent $n0 $udp0
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize_ 500
$cbr0 set interval_ 0.005
$cbr0 attach-agent $udp0
set null0 [new Agent/Null]
$ns attach-agent $n3 $null0
$ns connect $udp0 $null0

$ns at 0.1 "$cbr0 start"
$ns at 1.0 "finish"
$ns run

awk file:
BEGIN{ c=0;}
{
if($1=="d")
{
c++;
printf("%s\t%s\n",$5,$11);
}
}
END{printf("The number of packets dropped=%d\n",c);}

2) 
set ns [new Simulator]
set nf [open prog-2.nam w]
$ns namtrace-all $nf
set tf [open prog-2.tr w]
$ns trace-all $tf
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]

$ns duplex-link $n0 $n4 1005Mb 1ms DropTail
$ns duplex-link $n1 $n4 50Mb 1ms DropTail
$ns duplex-link $n2 $n4 2000Mb 1ms DropTail
$ns duplex-link $n3 $n4 200Mb 1ms DropTail
$ns duplex-link $n4 $n5 1Mb 1ms DropTail

set p1 [new Agent/Ping]
$ns attach-agent $n0 $p1
$p1 set packetSize_ 50000
$p1 set interval_ 0.0001

set p2 [new Agent/Ping]
$ns attach-agent $n1 $p2

set p3 [new Agent/Ping]
$ns attach-agent $n2 $p3
$p3 set packetSize_ 30000
$p3 set interval_ 0.0001

set p4 [new Agent/Ping]
$ns attach-agent $n3 $p4

set p5 [new Agent/Ping]
$ns attach-agent $n5 $p5

$ns queue-limit $n0 $n4 5
$ns queue-limit $n2 $n4 3
$ns queue-limit $n4 $n5 2

Agent/Ping instproc recv {from rtt} {
$self instvar node_
puts "node [$node_ id] received answer from $from with round trip time $rtt msec"
}

$ns connect $p1 $p5
$ns connect $p3 $p4

proc finish { } {
global ns nf tf
$ns flush-trace
close $nf
close $tf
exec nam prog-2.nam &
exit 0
}
set x 0.1
  while {$x < 3} {
  $ns at $x "$p1 send"
    set x [expr {$x+0.1}]
}
$ns run

awk file:
BEGIN{c=0;}
{
if($1=="d")
{ c++ ;
printf("%s\t%s\n",$5,$11);
}
}
END{printf("the number of packets dropped=%d\n",c);}

3) 
import java.util.*;
public class crc 
{
	public static void main(String args[]) 
	{
	    Scanner sc = new Scanner(System.in);
	    int m,g[],n,d[],z[],r[],msb,i,j,k;
	    System.out.print("Enter no of data bits: ");
	    n=sc.nextInt();
	    System.out.println("Enter no of generator bits :");
	    m=sc.nextInt();
	    d=new int[n+m];
	    g=new int[m];
	    System.out.println("Enter data bits:");
	    for(i=0;i<n;i++)
	    	d[i]=sc.nextInt();
	    System.out.println("Enter generator bits:");
	    for(j=0;j<m;j++)
	    	g[j]=sc.nextInt();
	    for(i=0;i<m-1;i++)
	    	d[n+i]=0;
	    r=new int[m+n];
	    for(i=0;i<m;i++)
	    	r[i]=d[i];
	    z=new int[m];
	    for(i=0;i<m;i++)
	    	z[i]=0;
	    for(i=0;i<n;i++)
	    {
	    	k=0;
	    	msb=r[i];
	    	for(j=i;j<m+i;j++)
	    	{
	    		if(msb==0)
	    			r[j]=xor(r[j],z[k]);
	    		else
	    			r[j]=xor(r[j],g[k]);
	    		k++;
	    	}
	    	r[m+i]=d[m+i];
	    }
	    System.out.print("The code bits added are:");
	    for(i=n;i<n+m-1;i++)
	    {
	    	d[i]=r[i];
	    	System.out.print(d[i]);
	    }
	    System.out.print("\nThe code data is:");
	    for(i=0;i<n+m-1;i++)
	    {
	    	System.out.print(d[i]);
	    }
	}
	public static int xor(int x,int y)
	{
		if(x==y)
			return(0);
		else
			return(1);
	}
}

output:
Enter no of data bits: 14
Enter no of generator bits :
4
Enter data bits:
1
1
0
1
0
0
1
1
1
0
1
1
0
0

Enter generator bits:
1
0
1
1
The code bits added are:100
The code data is:11010011101100100

4) 
set ns [new Simulator]
set tf [open prog4.tr w]
$ns trace-all $tf
set nf [open prog4.nam w]
$ns namtrace-all $nf

set n0 [$ns node]
$n0 color "magenta"
$n0 label "src1"
set n1 [$ns node]
set n2 [$ns node]
$n2 color "magenta"
$n2 label "src2"
set n3 [$ns node]
$n3 color "blue"
$n3 label "dest2"
set n4 [$ns node]
set n5 [$ns node]
$n5 color "blue"
$n5 label "dest1"

$ns make-lan "$n0 $n1 $n2 $n3 $n4" 100Mb 100ms LL Queue/DropTail Mac/802_3
$ns duplex-link $n4 $n5 1Mb 1ms DropTail

set tcp0 [new Agent/TCP]
$ns attach-agent $n0 $tcp0
set ftp0 [new Application/FTP]
$ftp0 attach-agent $tcp0
$ftp0 set packetSize_ 500
$ftp0 set interval_ 0.0001
set sink5 [new Agent/TCPSink]
$ns attach-agent $n5 $sink5

$ns connect $tcp0 $sink5

set tcp2 [new Agent/TCP]
$ns attach-agent $n2 $tcp2
set ftp2 [new Application/FTP]
$ftp2 attach-agent $tcp2
$ftp2 set packetSize_ 600
$ftp2 set interval_ 0.001
set sink3 [new Agent/TCPSink]
$ns attach-agent $n3 $sink3

$ns connect $tcp2 $sink3

set file1 [open file1.tr w]
$tcp0 attach $file1
set file2 [open file2.tr w]
$tcp2 attach $file2

$tcp0 trace cwnd_
$tcp2 trace cwnd_

proc finish { } {
global ns nf tf
$ns flush-trace
close $tf
close $nf
exec nam prog4.nam &
exit 0
}

$ns at 0.1 "$ftp0 start"
$ns at 5 "$ftp0 stop"
$ns at 7 "$ftp0 start"
$ns at 0.2 "$ftp2 start"
$ns at 8 "$ftp2 stop"
$ns at 14 "$ftp0 stop"
$ns at 10 "$ftp2 start"
$ns at 15 "$ftp2 stop"
$ns at 16 "finish"
$ns run

Awk file:
BEGIN{c=0;}
{
if($1=="d")
{ c++ ;
printf("%s\t%s\n",$5,$11);
}
}
END{printf("the number of packets dropped=%d\n",c);}
